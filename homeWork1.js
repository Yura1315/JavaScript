const l = console.log;

let a = "кот" > "код"; //JavaScript использует «алфавитный» или «лексикографический» порядок. Сравнивает посимвольно. Будет true
l(a);
let b = '2' + 2 * '2'; //У сложения меньший приоритет, сначала выполниться умножение(умножение числа на строку, приведет строку к числу), а потом сложение со строкой, результат 24
l(b);
let c = undefined == null; //не строгое сравнение, undefind означает, что значение не было присвоено или нет значения, так же как и null выведет true
l(c);
let d = undefined === null; //строгое сравнение, undefind = значение не присвоено, null = умышленным отсутствием значения. Выведет false 
l(d);
let f = null == 0; // выведет false, null = отсутствие значение, 0 это значение, даже пробел значение 
l(f);
let g = 2 > '3'; // оператор сравнения приведет к числу 3, а 3 больше 2
l(g);
let j = null - false + true; // false = 0, true = 1, null = отсутствует значение, сначало сложение false и true = 1, потом вычетание так как null ничего нет то равно 1
l(j);
let k = 1 / "l"; // число нельзя поделить на строку, NaN (не число)
l(k);
let m = '2' * '3'; // равно 6, строка 2 и 3 приведутся к числам 
l(m);
let n = 4 + 5 + 'O'; // сначала сложение цифр, потом цифра 9 сложится со строкой и получится строка 9О
l(n);
let p = 'l' + 4 + 5; // все станет строкой l45, бинарные плюс, делает из чисел строки, так как строка в начале, l складывается с 4 приведенный к строке и потом l4 складывается со строкой 5
l(p);
let r = "4" - 2; // равно 2, Сложение и преобразование строк — это особенность бинарного плюса +. другие арифметические операторы работают только с числами и всегда преобразуют операнды в числа.
l(r);
let s = '4' - '4x'; // другие арифметические операторы работают только с числами и всегда преобразуют операнды в числа. 4x не преобразавалось в число и выдас NaN - не число
l(s);
let t =  null == false; // null нет значения, false есть, выдаст false
l(t);
let x =  ' -4 '/ 0 + 1;
l(x);
let w = null + 1; // пустое значение + 1, равно 1
l(w);
let z = undefined + null; // пустое значение плюс пустое значение равно NaN
l(z);